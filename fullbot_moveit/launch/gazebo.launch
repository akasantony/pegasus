<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default="" doc="Initial joint configuration of the robot"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
   <!-- <arg name="world_name" value="$(find fullbot)/worlds/sim.world"/> -->
    <arg name="world_name" value="/home/likith/ws_moveit/src/storm_gazebo_ros_magnet/worlds/dipole_magnet.world"/>
     
    <arg name="paused" value="false"/>
    <arg name="verbose" value="true" />
    <!-- more default parameters can be changed here -->
  </include>
  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" textfile="$(find fullbot_moveit)/config/gazebo_fullbot.urdf" />
  

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load the controller parameters onto the parameter server -->
  <rosparam file="$(find fullbot_moveit)/config/gazebo_controllers.yaml" />
  <include file="$(find fullbot_moveit)/launch/ros_controllers.launch"/>
  <!-- <include file="$(find fullbot_moveit)/launch/arm_left_controller.launch"/> -->

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- <node name="reverse_joint_node" pkg="fullbot_moveit" type="reverse_joint" output="screen" /> -->
  <node name="reverse_joint_node" pkg="fullbot_plugin" type="reverse_joint" output="screen" />
  <!-- Given the published joint states, publish tf for the robot links -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" /> -->
</launch>
